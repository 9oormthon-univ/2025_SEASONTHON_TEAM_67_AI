name: deploy-fastapi
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Stop service (py-app)
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: C:\nssm\nssm.exe stop py-app

      - name: Sync code to C:\apps\py (mirror, exclude venv/.env/logs)
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: |
          $src = "$env:GITHUB_WORKSPACE"
          $dst = "C:\apps\py"
          # venv, .git, .github, 로그, .env 제외
          robocopy $src $dst /MIR /XD .git .github venv `
            /XF .env py-out.log py-err.log `
            /NFL /NDL
          if ($LASTEXITCODE -ge 8) { exit $LASTEXITCODE }

      - name: Write .env from secret
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: |
          Set-Content -Path 'C:\apps\py\.env' -Value "${{ secrets.FASTAPI_ENV_FILE }}"

      - name: Install Python deps (reuse existing venv)
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: |
          C:\apps\py\venv\Scripts\pip.exe install --upgrade pip
          C:\apps\py\venv\Scripts\pip.exe install -r C:\apps\py\requirements.txt

      - name: Start service (py-app)
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: C:\nssm\nssm.exe start py-app

      - name: (optional) Health check
        shell: powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -command "{0}"
        run: |
          try {
            $r = Invoke-WebRequest -Uri "http://127.0.0.1:8000/py/health" -UseBasicParsing -TimeoutSec 5
            Write-Host "Health: $($r.StatusCode)"
          } catch { Write-Warning "Health check failed"; exit 1 }
